<Window x:Class="Notebook.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:Notebook.Converters"
        xmlns:local="clr-namespace:Notebook"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        mc:Ignorable="d"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        ui:WindowHelper.UseModernWindowStyle="True"
        Title="Notebook 📓 - Default" Height="450" Width="800" Closing="Window_Closing"
        DataContext="{Binding RelativeSource={RelativeSource self}}">
    <Window.Resources>
        <conv:CellTypeToIsReadOnlyConverter x:Key="CellTypeToIsReadOnlyConverter"/>
        <conv:CellTypeToBorderThicknessConverter x:Key="CellTypeToBorderThicknessConverter"/>
        <conv:CellTypeToLabelNameConverter x:Key="CellTypeToLabelNameConverter"/>
        <conv:CellTypeToAdvancedEditorVisibilityConverter x:Key="CellTypeToAdvancedEditorVisibilityConverter"/>
        <conv:CellTypeToBasicEditorVisibilityConverter x:Key="CellTypeToBasicEditorVisibilityConverter"/>
        <conv:CellTypeToAvalonLanguageTypeConverter x:Key="CellTypeToAvalonLanguageTypeConverter"/>
        <conv:CellTypeToTextBoxFontFamilyConverter x:Key="CellTypeToTextBoxFontFamilyConverter"/>
        <conv:CellTypeToTextWrappingConverter x:Key="CellTypeToTextWrappingConverter"/>
        <conv:CellTypeToHorizontalScrollBarVisibilityConverter x:Key="CellTypeToHorizontalScrollBarVisibilityConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="Open" Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="Save" Key="S" Modifiers="Ctrl"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="Open" CanExecute="FileOpenCommand_CanExecute" Executed="FileOpenCommand_Executed" />
        <CommandBinding Command="Save" CanExecute="FileSaveCommand_CanExecute" Executed="FileSaveCommand_Executed" />

        <CommandBinding Command="local:NotebookCommands.CreateCSharpCellCommand" CanExecute="CreateCSharpCellCommand_CanExecute" Executed="CreateCSharpCellCommand_Executed"/>
        <CommandBinding Command="local:NotebookCommands.CreatePythonCellCommand" CanExecute="CreatePythonCellCommand_CanExecute" Executed="CreatePythonCellCommand_Executed"/>
        <CommandBinding Command="local:NotebookCommands.CreateMarkdownCellCommand" CanExecute="CreateMarkdownCellCommand_CanExecute" Executed="CreateMarkdownCellCommand_Executed"/>
        <CommandBinding Command="local:NotebookCommands.CreateCSharpCellWithCopyCommand" CanExecute="CreateCSharpCellWithCopyCommand_CanExecute" Executed="CreateCSharpCellWithCopyCommand_Executed"/>
        <CommandBinding Command="local:NotebookCommands.CreatePythonCellWithCopyCommand" CanExecute="CreatePythonCellWithCopyCommand_CanExecute" Executed="CreatePythonCellWithCopyCommand_Executed"/>
        <CommandBinding Command="local:NotebookCommands.CreateMarkdownCellWithCopyCommand" CanExecute="CreateMarkdownCellWithCopyCommand_CanExecute" Executed="CreateMarkdownCellWithCopyCommand_Executed"/>
        <CommandBinding Command="local:NotebookCommands.ExecuteCellCommand" CanExecute="ExecuteCellCommand_CanExecute" Executed="ExecuteCellCommand_Executed"/>
    </Window.CommandBindings>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open (Ctrl+O)" Click="OpenFileMenuItem_Click"/>
                <MenuItem Header="Reload" Click="RefreshFileMenuItem_Click"/>
                <MenuItem Header="Save (Ctrl+S)" Click="SaveFileMenuItem_Click"/>
                <Separator/>
                <MenuItem Header="Export">
                    <MenuItem Header="Export Markdown..." Click="ExportMarkdownMenuItem_Click"/>
                    <MenuItem Header="Export Markdown (with Cache Outputs)..." Click="ExportMarkdownMenuItemWithCache_Click"/>
                    <MenuItem Header="Export Code..." Click="ExportCodeMenuItem_Click"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Open Containing Folder" Click="OpenFileContainingFolderMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Add C# Cell (F2)" Click="AddCSharpCellMenuItem_Click"/>
                <MenuItem Header="Add Python Cell (F3)" Click="AddPythonCellMenuItem_Click"/>
                <MenuItem Header="Add Markdown Cell (F4)" Click="AddMarkdownCellMenuItem_Click"/>
                <MenuItem Header="Add C# Cell (Copy) (Shift+F2)" Click="AddCSharpCellWithCopyMenuItem_Click"/>
                <MenuItem Header="Add Python Cell (Copy) (Shift+F3)" Click="AddPythonCellWithCopyMenuItem_Click"/>
                <MenuItem Header="Add Markdown Cell (Copy) (Shift+F4)" Click="AddMarkdownCellWithCopyMenuItem_Click"/>
                <Separator/>
                <MenuItem Header="Delete Cell" Click="DeleteCellMenuItem_Click"/>
                <MenuItem Header="Delete All Cells" Click="DeleteAllCellsMenuItem_Click"/>
                <Separator/>
                <MenuItem Header="Convert Cell to Markdown (F11)"/>
                <MenuItem Header="Convert Cell to Code (F12)"/>
            </MenuItem>
            <MenuItem Header="Runtime">
                <MenuItem Header="Preload..." Click="PreloadScriptsMenuItem_Click"/>
                <MenuItem Header="Arguments..." Click="SetArgumentsMenuItem_Click"/>
                <Separator/>
                <MenuItem Header="Execute Cell (F5)" Click="ExecuteCellMenuItem_Click"/>
                <MenuItem Header="Execute All" Click="ExecuteAllMenuItem_Click"/>
            </MenuItem>
            <MenuItem Visibility="{Binding RunningIndicatorVisibility}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome Icon="Refresh" Spin="True" Width="24" Height="24" Foreground="DodgerBlue"/>
                        <Label Content="Running..." Margin="4, 0"/>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <ScrollViewer 
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Auto">
            <ItemsControl Name="DataItemsControl" DockPanel.Dock="Bottom" Margin="2" Padding="12" ItemsSource="{Binding Data.Cells}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel HorizontalAlignment="Stretch">
                            <Label Content="{Binding CellType, Converter={StaticResource CellTypeToLabelNameConverter}}"/>
                            <TextBox 
                                Visibility="{Binding CellType, Converter={StaticResource CellTypeToBasicEditorVisibilityConverter}}"
                                HorizontalAlignment="Stretch" Text="{Binding Content, UpdateSourceTrigger=PropertyChanged}" 
                                IsReadOnly="{Binding CellType, Converter={StaticResource CellTypeToIsReadOnlyConverter}}" 
                                AcceptsReturn="True" AcceptsTab="True" MaxHeight="450" TextWrapping="{Binding CellType, Converter={StaticResource CellTypeToTextWrappingConverter}}"
                                HorizontalScrollBarVisibility="{Binding CellType, Converter={StaticResource CellTypeToHorizontalScrollBarVisibilityConverter}}" VerticalScrollBarVisibility="Auto"
                                GotFocus="TextBox_GotFocus" FontFamily="{Binding CellType, Converter={StaticResource CellTypeToTextBoxFontFamilyConverter}}"
                                BorderThickness="{Binding CellType, Converter={StaticResource CellTypeToBorderThicknessConverter}}"/>
                            <avalonEdit:TextEditor 
                                Visibility="{Binding CellType, Converter={StaticResource CellTypeToAdvancedEditorVisibilityConverter}}"
                                Name="AvalonEdit" Margin="5"
                                HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                BorderThickness="2" BorderBrush="Beige"
                                ShowLineNumbers="True" SyntaxHighlighting="{Binding CellType, Converter={StaticResource CellTypeToAvalonLanguageTypeConverter}}" 
                                FontSize="10pt" FontFamily="Consolas" WordWrap="True" 
                                GotFocus="AvalonTextEditor_GotFocus"
                                DataContextChanged="AvalonTextEditor_DataContextChanged"
                                Initialized="AvalonTextEditor_Initialized"
                                TextChanged="AvalonTextEditor_OnTextChanged"
                                PreviewMouseWheel="AvalonTextEditor_PreviewMouseWheel"
                                RequestBringIntoView="AvalonTextEditor_RequestBringIntoView"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </DockPanel>
</Window>
